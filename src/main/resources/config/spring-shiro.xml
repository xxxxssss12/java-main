<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <!-- Root Context: defines shared resources visible to all other web components -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
    <bean id="credentialsMatcher" class="xs.spider.work.shiro.UserCredentialsMatcher"/>

    <!-- 缓存管理 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

    <bean id="userRealm" class="xs.spider.work.shiro.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="userRealm"/>
            </list>
        </property>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!--
       Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行
       Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/static/login.html"/>
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在AuthController里硬编码) -->
        <!-- <property name="successUrl" value="/" ></property> -->
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <property name="unauthorizedUrl" value="/static/none.html"/>
        <property name="filterChainDefinitionMap">
            <props>
                <prop key="/static/js/*">anon</prop>
                <prop key="/static/css/*">anon</prop>
                <prop key="/static/fonts/*">anon</prop>
                <prop key="/static/img/*">anon</prop>
                <prop key="/static/tools/*">anon</prop>
                <prop key="/auth/doLogin">anon</prop>

                <prop key="/*/*get*">permissionFilter</prop>
                <prop key="/*/*update*">permissionFilter</prop>
                <prop key="/*/*add*">permissionFilter</prop>
                <prop key="/*/*Update*">permissionFilter</prop>
                <prop key="/*/*delete*">permissionFilter</prop>
                <prop key="/*/*insert*">permissionFilter</prop>
                <prop key="/*/*save*">permissionFilter</prop>
                <prop key="/*/*find*">permissionFilter</prop>
                <prop key="/static/*.html">authc</prop>
                <prop key="/static/*/*.html">authc</prop>
                <prop key="/static/*/*/*.html">authc</prop>
            </props>
        </property>
        <property name="filters">
            <util:map>
                <entry key="permissionFilter">
                    <bean class="xs.spider.work.shiro.PermissionFilter" />
                </entry>
            </util:map>
        </property>
    </bean>

    <!--
       开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，
       并在必要时进行安全逻辑验证
    -->
    <!--
    -->
    <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>
    <!-- 会话Cookie模板
    sessionIdCookie：maxAge=-1表示浏览器关闭时失效此Cookie；
    rememberMeCookie：即记住我的Cookie，保存时长30天；
    -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
    <!--
    rememberMe管理器，cipherKey是加密rememberMe Cookie的密钥；默认AES算法；
    -->
    <bean id="rememberMeManager"
          class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="bd907c33c56b494dae4dd647a427d096"/>
        <!--<property name="cipherKey" value="-->
        <!--#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>-->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <!--<property name="globalSessionTimeout" value="120000"/>-->
    <!--<property name="deleteInvalidSessions" value="true"/>-->
    <!--<property name="sessionValidationSchedulerEnabled" value="true"/> -->
    <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
    <!--<property name="sessionDAO" ref="sessionDAO"/>-->
    <!--<property name="sessionIdCookieEnabled" value="true"/>-->
    <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
    <!--</bean>-->
</beans>